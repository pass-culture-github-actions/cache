name: 'Cache GCS for self-hosted and Azure for github-runner'
description: 'Cache artifacts to gcs for self-hosted or azure for github-runner to improve workflow execution time'
author: 'passCulture'
inputs:
  path:
    description: 'A list of files, directories, and wildcard patterns to cache and restore'
    required: true
  key:
    description: 'An explicit key for restoring and saving the cache'
    required: true
  restore-keys:
    description: 'An ordered list of keys to use for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.'
    required: false
  upload-chunk-size:
    description: 'The chunk size used to split up large files during upload, in bytes'
    required: false
  enableCrossOsArchive:
    description: 'An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms'
    default: 'false'
    required: false
  fail-on-cache-miss:
    description: 'Fail the workflow if cache entry is not found'
    default: 'false'
    required: false
  lookup-only:
    description: 'Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache'
    default: 'false'
    required: false
  bucket:
    description: 'Name of the bucket to store the cache into'
    required: false
  compression-method: 
    description: 'Compression method for the archive (gzip or zstd)'
    default: ''
    required: false
  workload-identity-provider:
    description: 'GCP workload identity provider'
    required: false
  service-account:
    description: 'GCP service-account'
    required: false
  key-file-name:
    description: 'GCS auth key file path (required for gcs if not providing the service-account and workload-identity-provider)'
    required: false

outputs:
  cache-hit:
    description: 'A boolean value to indicate an exact match was found for the primary key'

runs:
  using: "composite"
  steps:
    - name: Cache github
      if: ${{ startsWith(runner.name, 'GitHub Actions') }}
      id: cache-github
      uses: actions/cache@v3
      with:
        path: ${{ inputs.path }}
        key: ${{ inputs.key }}
        restore-keys: ${{ inputs.restore-keys }}
        upload-chunk-size: ${{ inputs.upload-chunk-size }}
        enableCrossOsArchive: ${{ inputs.enableCrossOsArchive }}
        fail-on-cache-miss: ${{ inputs.fail-on-cache-miss }}
        lookup-only: ${{ inputs.lookup-only }}
    - name: "OpenID Connect Authentication"
      id: openid-connect-auth
      if: ${{ ! startsWith(runner.name, 'GitHub Actions') && inputs.service-account && inputs.workload-identity-provider }}
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: ${{ inputs.workload-identity-provider }}
        service_account: ${{ inputs.service-account }}
    - name: 'Set up Cloud SDK'
      if: ${{ ! startsWith(runner.name, 'GitHub Actions') && inputs.service-account && inputs.workload-identity-provider  }}
      uses: 'google-github-actions/setup-gcloud@v1'
    - name: Cache gcs
      if: ${{ ! startsWith(runner.name, 'GitHub Actions') }}
      id: gcs-cache
      uses: pass-culture-github-actions/gcs-cache@v1.0.0
      with:
        path: ${{ inputs.path }}
        key: ${{ inputs.key }}
        restore-keys: ${{ inputs.restore-keys }}
        bucket: ${{ inputs.bucket }}
        compression-method: ${{ inputs.compression-method }}
        key-file-name: ${{ steps.openid-connect-auth.outputs.credentials_file_path || inputs.key-file-name }}
branding:
  icon: 'archive'
  color: 'gray-dark'